{"version":3,"file":"static/js/58.434b1d34.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/MyContacts/Container/container.module.css?9b71","components/MyContacts/Container/Container.jsx","webpack://goit-react-hw-08-phonebook/./src/components/MyContacts/FormAddContacts/form-add-book.module.css?cd51","components/MyContacts/FormAddContacts/initialState.js","components/MyContacts/FormAddContacts/FormAddContacts.jsx","webpack://goit-react-hw-08-phonebook/./src/components/MyContacts/ContactsList/contacts-list.module.css?be56","components/MyContacts/ContactsList/ContactsList.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","components/MyContacts/my-contacts.module.css","components/MyContacts/MyContacts.jsx","pages/MyContactsPage/MyContactsPage.jsx","shared/hooks/useForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container_container__vf0zN\",\"title\":\"container_title__YpJ7F\"};","import PropTypes from 'prop-types';\n\nimport styles from './container.module.css';\n\nconst Container = ({ name, children }) => {\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.title}>{name}</h2>\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n\nContainer.propTypes = {\n  name: PropTypes.string,\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"group\":\"form-add-book_group__QKtYq\",\"label\":\"form-add-book_label__jLpEl\",\"input\":\"form-add-book_input__m5nZk\"};","export const initialState = {\n  name: '',\n  number: '',\n};\n","import useForm from '../../../shared/hooks/useForm';\n\nimport styles from './form-add-book.module.css';\n\nimport { initialState } from './initialState';\n\nconst FormAddContact = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, number } = state;\n  console.log('name', name);\n  console.log('email', number);\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit}>\n      <div className={styles.group}>\n        <div className={styles.group}>\n          <label className={styles.label} htmlFor=\"\">\n            Name:\n          </label>\n          <input\n            value={name}\n            name=\"name\"\n            onChange={handleChange}\n            className={styles.input}\n            type=\"text\"\n            placeholder=\"Type name...\"\n          />\n        </div>\n        <label className={styles.label} htmlFor=\"\">\n          Number:\n        </label>\n        <input\n          value={number}\n          name=\"number\"\n          onChange={handleChange}\n          className={styles.input}\n          type=\"number\"\n          placeholder=\"Type number...\"\n        />\n      </div>\n      <div className={styles.group}>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default FormAddContact;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contacts-list_item__1EEEO\",\"btn\":\"contacts-list_btn__Gz7Ag\"};","import styles from './contacts-list.module.css';\n\nconst ContactList = ({ contacts, removeContact }) => {\n  console.log('contacts', contacts);\n  const elements = contacts?.map(({ id, name, email }) => (\n    <li key={id} className={styles.item}>\n      {name} {email}.\n      <button\n        type=\"button\"\n        className={styles.btn}\n        onClick={() => removeContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  ));\n\n  return <ul>{elements}</ul>;\n};\n\nexport default ContactList;\n","export const getContacts = ({ contacts }) => contacts.items;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = filter?.toLowerCase();\n  const result = contacts?.items?.filter(({ name, email }) => {\n    const normalizedName = name?.toLowerCase();\n    const normalizedEmail = email?.toLowerCase();\n    return (\n      normalizedName.includes(normalizedFilter) ||\n      normalizedEmail.includes(normalizedFilter)\n    );\n  });\n\n  return result;\n};\n\nexport const getFavoriteContacts = ({ contacts }) => {\n  const favoriteContacts = contacts.items.filter(({ favorite }) => favorite);\n  return favoriteContacts;\n};\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"my-contacts_contacts__5wVo9\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Container from './Container';\nimport FormAddContacts from './FormAddContacts/FormAddContacts';\nimport ContactList from './ContactsList/ContactsList';\n\nimport {\n  fetchContacts,\n  addContact,\n  removeContact,\n} from '../../redux/contacts/contacts-operation';\nimport { setFilter } from '../../redux/filter/filter-actions';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selectors';\n\nimport styles from './my-contacts.module.css';\n\nconst MyContacts = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onAddContact = payload => {\n    dispatch(addContact(payload));\n  };\n\n  const onRemoveContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <div className={styles.contacts}>\n      <Container title=\"Add contacts\">\n        <FormAddContacts onSubmit={onAddContact} />\n      </Container>\n      <Container title=\"Contacts list\">\n        <input\n          onChange={onSetFilter}\n          value={filter}\n          name=\"filter\"\n          type=\"text\"\n          placeholder=\"Enter name \"\n        />\n        <ContactList contacts={contacts} removeContact={onRemoveContact} />\n      </Container>\n    </div>\n  );\n};\n\nexport default MyContacts;\n","import MyContacts from '../../components/MyContacts/MyContacts';\n\nconst MyContactsPage = () => {\n  return (\n    <div className=\"container\">\n      <MyContacts />\n    </div>\n  );\n};\n\nexport default MyContactsPage;\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n  console.log('state', state);\n  console.log('initialState', initialState);\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["name","children","className","styles","initialState","number","onSubmit","useForm","state","handleChange","handleSubmit","console","log","action","htmlFor","value","onChange","type","placeholder","contacts","removeContact","elements","map","id","email","onClick","getFilteredContacts","filter","items","normalizedFilter","toLowerCase","normalizedName","normalizedEmail","includes","getFilter","useSelector","dispatch","useDispatch","useEffect","fetchContacts","title","FormAddContacts","payload","addContact","target","setFilter","useState","setState","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}