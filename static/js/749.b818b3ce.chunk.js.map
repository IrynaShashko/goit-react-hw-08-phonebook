{"version":3,"file":"static/js/749.b818b3ce.chunk.js","mappings":"4QAAaA,EAAe,CAC1BC,KAAM,GACNC,MAAO,GACPC,SAAU,I,UCuFZ,EA3EqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDL,aAAAA,EACAI,SAAAA,IAFME,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAKrBP,EAA0BK,EAA1BL,KAAMC,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAErB,OACE,SAACM,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,SAACC,EAAA,EAAD,CAAOC,UAAW,EAAlB,UACE,UAACC,EAAA,EAAD,CACEJ,UAAU,OACVK,GAAI,CAAEC,EAAG,EAAGC,MAAO,IAAKC,OAAQ,KAChCC,OAAO,GACPf,SAAUI,EAJZ,WAME,SAACY,EAAA,EAAD,CAAYC,QAAQ,KAAKX,UAAU,KAAnC,4BAGA,SAACY,EAAA,EAAD,CACEC,MAAOtB,EACPA,KAAK,OACLuB,SAAUjB,EACVkB,KAAK,OACLC,YAAY,OACZC,MAAM,OACNC,UAAU,aACVC,KAAK,QACLC,OAAO,SACPC,WAAS,EACTC,UAAQ,KAEV,SAACV,EAAA,EAAD,CACEC,MAAOrB,EACPD,KAAK,QACLuB,SAAUjB,EACVkB,KAAK,QACLC,YAAY,cACZC,MAAM,QACNC,UAAU,aACVC,KAAK,QACLC,OAAO,SACPC,WAAS,EACTC,UAAQ,KAEV,SAACV,EAAA,EAAD,CACEC,MAAOpB,EACPF,KAAK,WACLuB,SAAUjB,EACVkB,KAAK,WACLC,YAAY,iBACZC,MAAM,WACNC,UAAU,aACVC,KAAK,QACLC,OAAO,SACPC,WAAS,EACTC,UAAQ,KAEV,SAAClB,EAAA,EAAD,CAAKJ,UAAU,MAAMuB,GAAI,EAAzB,UACE,SAACC,EAAA,EAAD,CACEb,QAAQ,YACRQ,KAAK,SACLM,MAAM,UACNV,KAAK,SAJP,6BAaX,E,oBChED,EAhBqB,WACnB,IAAMW,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAMhB,OACE,iBAAKC,UAAU,YAAf,WACE,SAAC,EAAD,CAActC,SANC,SAAAuC,GACjBP,GAASQ,EAAAA,EAAAA,IAAOD,GACjB,IAKIH,IAAU,cAAGK,MAAO,CAAEV,MAAO,OAAnB,SAA6BM,MAG7C,C,iECAD,IApBgB,SAAC,GAAgC,IAA9BzC,EAA6B,EAA7BA,aAAcI,EAAe,EAAfA,SAC/B,GAA0B0C,EAAAA,EAAAA,WAAS,UAAK9C,IAAxC,eAAOM,EAAP,KAAcyC,EAAd,KAgBA,MAAO,CAAEzC,MAAAA,EAAOyC,SAAAA,EAAUxC,aAdL,SAAC,GAAgB,IAAdyC,EAAa,EAAbA,OACd/C,EAA+B+C,EAA/B/C,KAAMsB,EAAyByB,EAAzBzB,MAAOE,EAAkBuB,EAAlBvB,KAAMwB,EAAYD,EAAZC,QACrBC,EAAoB,aAATzB,EAAsBwB,EAAU1B,EACjDwB,GAAS,SAAAI,GAAS,yBACbA,GADa,cAEflD,EAAOiD,GAFQ,GAInB,EAOuC1C,aALnB,SAAA4C,GACnBA,EAAEC,iBACFjD,GAAS,UAAKE,IACdyC,GAAS,UAAK/C,GACf,EAEF,C","sources":["components/RegisterForm/initialState.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","shared/hooks/useForm.js"],"sourcesContent":["export const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n","import useForm from '../../shared/hooks/useForm';\n\nimport {\n  Container,\n  Paper,\n  Box,\n  Typography,\n  Button,\n  TextField,\n} from '@mui/material';\n\n// import styles from './register-form.module.css';\n\nimport { initialState } from './initialState';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, email, password } = state;\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper elevation={5}>\n        <Box\n          component=\"form\"\n          sx={{ p: 5, width: 300, height: 300 }}\n          action=\"\"\n          onSubmit={handleSubmit}\n        >\n          <Typography variant=\"h5\" component=\"h2\">\n            Register form\n          </Typography>\n          <TextField\n            value={name}\n            name=\"name\"\n            onChange={handleChange}\n            type=\"text\"\n            placeholder=\"Name\"\n            label=\"Name\"\n            multiline=\"controlled\"\n            size=\"small\"\n            margin=\"normal\"\n            fullWidth\n            required\n          />\n          <TextField\n            value={email}\n            name=\"email\"\n            onChange={handleChange}\n            type=\"email\"\n            placeholder=\"Enter email\"\n            label=\"Email\"\n            multiline=\"controlled\"\n            size=\"small\"\n            margin=\"normal\"\n            fullWidth\n            required\n          />\n          <TextField\n            value={password}\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            placeholder=\"Enter password\"\n            label=\"Password\"\n            multiline=\"controlled\"\n            size=\"small\"\n            margin=\"normal\"\n            fullWidth\n            required\n          />\n          <Box component=\"div\" mt={2}>\n            <Button\n              variant=\"contained\"\n              size=\"medium\"\n              color=\"primary\"\n              type=\"submit\"\n            >\n              Sign up\n            </Button>\n          </Box>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport RegisterForm from '../../components/RegisterForm/RegisterForm';\n\nimport { signup } from '../../redux/auth/auth-operation';\n\nimport { getAuthError } from '../../redux/auth/auth-selectors';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const { status, message } = useSelector(getAuthError);\n\n  const onRegister = data => {\n    dispatch(signup(data));\n  };\n\n  return (\n    <div className=\"container\">\n      <RegisterForm onSubmit={onRegister} />\n      {status && <p style={{ color: 'red' }}>{message}</p>}\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["initialState","name","email","password","onSubmit","useForm","state","handleChange","handleSubmit","Container","component","maxWidth","Paper","elevation","Box","sx","p","width","height","action","Typography","variant","TextField","value","onChange","type","placeholder","label","multiline","size","margin","fullWidth","required","mt","Button","color","dispatch","useDispatch","useSelector","getAuthError","status","message","className","data","signup","style","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}