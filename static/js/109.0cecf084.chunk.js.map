{"version":3,"file":"static/js/109.0cecf084.chunk.js","mappings":"0NACA,EAAwB,6BAAxB,EAA6D,6BAA7D,EAAkG,6BCDrFA,EAAe,CAC1BC,KAAM,GACNC,MAAO,GACPC,SAAU,I,SC4DZ,EAzDqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDL,aAAAA,EACAI,SAAAA,IAFME,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAKrBP,EAA0BK,EAA1BL,KAAMC,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAErB,OACE,kBAAMM,OAAO,GAAGL,SAAUI,EAA1B,WACE,iBAAKE,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAcC,QAAQ,GAAxC,2GAGA,kBACEC,MAAOZ,EACPA,KAAK,OACLa,SAAUP,EACVG,UAAWC,EACXI,KAAK,OACLC,YAAY,yIACZC,UAAQ,QAGZ,iBAAKP,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAcC,QAAQ,GAAxC,8FAGA,kBACEC,MAAOX,EACPD,KAAK,QACLa,SAAUP,EACVG,UAAWC,EACXI,KAAK,QACLC,YAAY,kIAGhB,iBAAKN,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAcC,QAAQ,GAAxC,6HAGA,kBACEC,MAAOV,EACPF,KAAK,WACLa,SAAUP,EACVG,UAAWC,EACXI,KAAK,WACLC,YAAY,iKAGhB,gBAAKN,UAAWC,EAAhB,UACE,mBAAQI,KAAK,SAAb,oFAIP,E,mBC9BD,EAtBqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,GAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAOhB,OANgBH,EAAAA,EAAAA,IAAYI,EAAAA,IAOnB,SAAC,KAAD,CAAUC,GAAG,eAIpB,iBAAKf,UAAU,YAAf,WACE,2CACA,SAAC,EAAD,CAAcN,SAXC,SAAAsB,GACjBR,GAASS,EAAAA,EAAAA,GAAOD,GACjB,IAUIJ,IAAU,cAAGM,MAAO,CAAEC,MAAO,OAAnB,SAA6BN,MAG7C,C,8EC7BM,IAAMF,EAAe,SAAC,GAAD,SAAGS,KAAgBC,OAAS,CAAC,CAA7B,EACfP,EAAS,SAAC,GAAD,SAAGM,KAAgBE,OAAnB,C,iECsBtB,IArBgB,SAAC,GAAgC,IAA9BhC,EAA6B,EAA7BA,aAAcI,EAAe,EAAfA,SAC/B,GAA0B6B,EAAAA,EAAAA,WAAS,UAAKjC,IAAxC,eAAOM,EAAP,KAAc4B,EAAd,KAiBA,MAAO,CAAE5B,MAAAA,EAAO4B,SAAAA,EAAU3B,aAfL,SAAC,GAAgB,IAAd4B,EAAa,EAAbA,OACdlC,EAA+BkC,EAA/BlC,KAAMY,EAAyBsB,EAAzBtB,MAAOE,EAAkBoB,EAAlBpB,KAAMqB,EAAYD,EAAZC,QACrBC,EAAoB,aAATtB,EAAsBqB,EAAUvB,EACjDqB,GAAS,SAAAI,GAAS,yBACbA,GADa,cAEfrC,EAAOoC,GAFQ,GAInB,EAQuC7B,aANnB,SAAA+B,GACnBA,EAAEC,iBACFpC,GAAS,UAAKE,IACd4B,GAAS,UAAKlC,GACf,EAGF,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/RegisterForm/register-form.module.css?a013","components/RegisterForm/initialState.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","redux/auth/auth-selectors.js","shared/hooks/useForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"group\":\"register-form_group__U+89q\",\"label\":\"register-form_label__iH7vG\",\"input\":\"register-form_input__U0nyP\"};","export const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n","import useForm from '../../shared/hooks/useForm';\n\nimport styles from './register-form.module.css';\n\nimport { initialState } from './initialState';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, email, password } = state;\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit}>\n      <div className={styles.group}>\n        <label className={styles.label} htmlFor=\"\">\n          Имя пользователя:\n        </label>\n        <input\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          className={styles.input}\n          type=\"text\"\n          placeholder=\"Введите имя пользователя\"\n          required\n        />\n      </div>\n      <div className={styles.group}>\n        <label className={styles.label} htmlFor=\"\">\n          Email пользователя:\n        </label>\n        <input\n          value={email}\n          name=\"email\"\n          onChange={handleChange}\n          className={styles.input}\n          type=\"email\"\n          placeholder=\"Введите email пользователя\"\n        />\n      </div>\n      <div className={styles.group}>\n        <label className={styles.label} htmlFor=\"\">\n          Пароль пользователя:\n        </label>\n        <input\n          value={password}\n          name=\"password\"\n          onChange={handleChange}\n          className={styles.input}\n          type=\"password\"\n          placeholder=\"Введите пароль пользователя\"\n        />\n      </div>\n      <div className={styles.group}>\n        <button type=\"submit\">Регистрация</button>\n      </div>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport RegisterForm from '../../components/RegisterForm/RegisterForm';\n\nimport { signup } from '../../redux/auth/auth-operation';\n\nimport { getAuthError, isAuth } from '../../redux/auth/auth-selectors';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const { status, message } = useSelector(getAuthError);\n  const isLogin = useSelector(isAuth);\n\n  const onRegister = data => {\n    dispatch(signup(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/my-books\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Register Page</h2>\n      <RegisterForm onSubmit={onRegister} />\n      {status && <p style={{ color: 'red' }}>{message}</p>}\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","export const getAuthError = ({ auth }) => auth.error || {};\nexport const isAuth = ({ auth }) => auth.isLogin;\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["initialState","name","email","password","onSubmit","useForm","state","handleChange","handleSubmit","action","className","styles","htmlFor","value","onChange","type","placeholder","required","dispatch","useDispatch","useSelector","getAuthError","status","message","isAuth","to","data","signup","style","color","auth","error","isLogin","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}